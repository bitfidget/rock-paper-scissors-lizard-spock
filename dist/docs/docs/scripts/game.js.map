{"version":3,"sources":["game.babel.js"],"names":["gameHistory","game","init","gameDom","select","choice","outcome","me","gameChoices","pc","Math","floor","random","length","push","showResult","returnResult","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","beats","Symbol","iterator","next","done","i","value","weapon","err","return","returnVerb","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","verb","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","updateState","clearCls","screen","result","shareOptions","contenturl","calltoactionurl","clientid","cookiepolicy","calltoactionlabel","html","name","gameControl","classList","remove","add","prefilltext","gapi","interactivepost","render","gameResult","innerHTML"],"mappings":"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","file":"game.babel.js","sourcesContent":["const gameHistory = []\n\nconst game = {\n  init: function () {\n    gameDom.init()\n  },\n\n  select: function (choice) {\n    let outcome = {\n      me: gameChoices[choice],\n      pc: gameChoices[Math.floor(Math.random() * gameChoices.length)]\n    }\n    gameHistory.push(outcome)\n    gameDom.showResult()\n  }\n}\n\nconst returnResult = function (me, pc) {\n  if (me === pc) {\n    return 'tie'\n  } else {\n    for (let i of me.beats) {\n      if (gameChoices[i.weapon] == pc) {\n        return 'win'\n      }\n    }\n    return 'lose'\n  }\n}\n\nconst returnVerb = function (me, pc) {\n  if (me === pc) {\n    return 'nothing'\n  } else {\n    for (let i of me.beats) {\n      if (gameChoices[i.weapon] == pc) {\n        return i.verb\n      }\n    }\n    for (let i of pc.beats) {\n      if (gameChoices[i.weapon] == me) {\n        return i.verb\n      }\n    }\n  }\n}\n\nconst gameDom = {\n  init: function () {\n    updateState.clearCls(screen, 'state-game')\n  },\n\n  showResult: function () {\n    let result = gameHistory[gameHistory.length - 1]\n    let shareOptions = {\n      contenturl: 'https://plus.google.com/pages/',\n      calltoactionurl: 'https://plus.google.com/pages/',\n      clientid: '311755866043-nqbamcbg2kb63k8oo9gpq38iu0s11b4u.apps.googleusercontent.com',\n      cookiepolicy: 'single_host_origin',\n      calltoactionlabel: \"START\",\n    }\n\n    // print result\n    let html =\n    `\n      <p>you chose ${result.me.name}</p>\n      <p>Spock chose ${result.pc.name}</p>\n      <h1>You ${returnResult(result.me, result.pc)}!</h1>\n\n    `\n    gameControl.classList.remove('share')\n\n    // print extra info if you won or lost\n    if (returnResult(result.me, result.pc) == 'win') {\n\n      // share button only if you win\n      gameControl.classList.add('share')\n      shareOptions.prefilltext = 'I just beat Spock at Rock_Paper_Scissors_Lizard_Spock because ' + result.me.name + ' ' + returnVerb(result.me, result.pc) + ' ' + result.pc.name\n      gapi.interactivepost.render('shareWin', shareOptions);\n\n      html +=\n      `\n        <h2>${result.me.name}</h2>\n        <h3>${returnVerb(result.me, result.pc)}</h3>\n        <h2>${result.pc.name}</h2>\n      `\n    } else\n    if (returnResult(result.me, result.pc) == 'lose') {\n      html +=\n      `\n        <h2>${result.pc.name}</h2>\n        <h3>${returnVerb(result.me, result.pc)}</h3>\n        <h2>${result.me.name}</h2>\n      `\n    }\n    gameResult.innerHTML = html\n    screen.classList.add('result')\n  }\n}\n\n// 'official' rules thanks to http://bigbangtheory.wikia.com/wiki/Rock_Paper_Scissors_Lizard_Spock\nconst gameChoices = [\n  {\n    name: \"Scissors\",\n    beats: [\n      {\n        weapon: 1,\n        verb: 'cuts'\n      },\n      {\n        weapon: 3,\n        verb: 'decapitates'\n      }\n    ]\n  },\n  {\n    name: \"Paper\",\n    beats: [\n      {\n        weapon: 2,\n        verb: 'covers'\n      },\n      {\n        weapon: 4,\n        verb: 'disproves'\n      }\n    ]\n  },\n  {\n    name: \"Rock\",\n    beats: [\n      {\n        weapon: 3,\n        verb: 'crushes'\n      },\n      {\n        weapon: 0,\n        verb: 'crushes'\n      }\n    ]\n  },\n  {\n    name: \"Lizard\",\n    beats: [\n      {\n        weapon: 4,\n        verb: 'poisons'\n      },\n      {\n        weapon: 1,\n        verb: 'eats'\n      }\n    ]\n  },\n  {\n    name: \"Spock\",\n    beats: [\n      {\n        weapon: 0,\n        verb: 'smashes'\n      },\n      {\n        weapon: 2,\n        verb: 'vapourises'\n      }\n    ]\n  }\n]\n"]}